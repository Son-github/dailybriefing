services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend-net
    volumes:
      - pgdata:/var/lib/postgresql/data

  auth-service:
    build:
      context: ./backend/auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - backend-net
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_NS=${JWT_EXPIRATION_MS}

  exchange-service:
    build:
      context: ./backend/exchange-service
    container_name: exchange-service
    ports:
      - "8082:8082"
    networks:
      - backend-net
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - EXCHANGE_API_KEY=${EXCHANGE_API_KEY}

  weather-service:
    build:
      context: ./backend/weather-service
    container_name: weather-service
    ports:
      - "8083:8083"
    networks:
      - backend-net
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - WEATHER_API_KEY=${WEATHER_API_KEY}

  news-service:
    build:
      context: ./backend/news-service/backend
    container_name: news-service
    ports:
      - "8084:8084"
    networks:
      - backend-net
    depends_on:
      - postgres
      - sentiment
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

  sentiment:
    build:
      context: ./backend/news-service/sentiment
    container_name: sentiment
    ports:
      - "5001:5000"
    networks:
      - backend-net

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80" # 3000으로 접속하면 Nginx로 라우팅
    networks:
      - backend-net
    depends_on:
      - auth-service
      - exchange-service
#      - weather-service

networks:
  backend-net:

volumes:
  pgdata: